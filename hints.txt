1. Metamask browser extension was injecting some unwanted networks.
So it should be disabled during the development process (or it must be connected with a local geth instance)


2. Private network `truffle deploy` might not work without an explicit gas limit
https://ethereum.stackexchange.com/questions/21262/truffle-deployment-on-test-network-says-error-exceeds-block-gas-limit


3. During contract deployment plain account unlocking might be insufficient.
Time in seconds should be submitted to keep the accounts open long enough.

```
personal.unlockAccount(eth.accounts[0], "<your password>", 15000)
```

https://ethereum.stackexchange.com/questions/11908/account-is-locked-after-running-truffle-migrate-command




4. Events do not work via RPC. Only web socket provider is required for that.

I subscribed to the event but it was not working. The callback was never called. Then I found out that I needed to activate the WebSockets server (--ws and similar in geth).
Found it in this Ethereum Stack Exchange Post


https://github.com/ethereum/web3.js/issues/989



5. ganache-cli listens to websockets on the same port as one for RPC connections
** because HTTP polling is inefficient. 
** P.S. should have guessed before.

[?] why is HttpProvider a default option in the react truffle box ?




6. Contract method callback is the place where all fired events are available.
Site GUI can be updated here.
Other types of event listening are worse for this kind of task (given the current contract logic)


```
await contract.DoWork(args, {from: '0xdeadbeaf', gas: 20000})
```



7. truffle box react scripts must be upgraded

```
npm install react-scripts@>=2.0.0 --save
```


8. Ipfs fails to render the site properly while "serve" mini web server does.
Just like ```npm run start```


```
serve -s /home/adk/projects/ethereum_learn/my_small_projects/splitter-react/client/build
```



9. The webpack tutorial gives a good idea. 
But it is not accurate enough, so I had to change some configs.
http://www.pro-react.com/materials/appendixA/
https://www.valentinog.com/blog/react-webpack-babel/#How_to_set_up_React_webpack_and_Babel_setting_up_webpack
https://www.robinwieruch.de/minimal-react-webpack-babel-setup/


10. When homepage is omitted in package.json, ipfs deployment does not work well since links get broken.

When you’re happy with your super simple react app and think it’s time to deploy 
you first have to go to the package.json 
and add following line “homepage”: “./”, 
to tell the build process that your base directory is in the same folder. 

https://medium.com/elbstack/decentralized-hosting-of-a-static-react-app-with-ipfs-aae11b860f5e
https://hackernoon.com/ten-terrible-attempts-to-make-the-inter-planetary-file-system-human-friendly-e4e95df0c6fa


11. an interesting tool to explore. 
https://developer.lamarkaz.com/parasol/usage

Looks like "Truffle" replacement but a less mature one (imho).
It seems to have less integration with web UI frameworks such as React/Vue/etc.



12.



